(function(){const l=document.createElement("link").relList;if(l&&l.supports&&l.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))d(t);new MutationObserver(t=>{for(const r of t)if(r.type==="childList")for(const a of r.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&d(a)}).observe(document,{childList:!0,subtree:!0});function p(t){const r={};return t.integrity&&(r.integrity=t.integrity),t.referrerPolicy&&(r.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?r.credentials="include":t.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function d(t){if(t.ep)return;t.ep=!0;const r=p(t);fetch(t.href,r)}})();/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * SPDX-License-Identifier: Apache-2.0
 */let h,m;const f="https://d2ad6b4ur7yvpq.cloudfront.net/naturalearth-3.3.0/ne_10m_airports.geojson";function S(){const c=51.4709959,l=-.4531566,p=2,d=0,t=0,r=document.getElementById("map");h=new google.maps.Map(r,{zoom:p,center:new google.maps.LatLng(c,l),heading:d,tilt:t,mapId:"b1beacae401d047c"});const a=document.getElementById("tooltip");function y({x:i,y:e,object:n}){n?(a.style.display="block",a.style.left=`${i+5}px`,a.style.top=`${e+5}px`,a.innerHTML=`${n.properties.name} - ${n.properties.abbrev}`):a.style.display="none"}const u={click:null,dblclick:null,mousemove:null,mouseout:null};class g extends google.maps.WebGLOverlayView{constructor(e,n,s={}){super(),this.deck=null,this.layers_=n,this.props=s,this.canvas=e}set layers(e){this.layers_=e,this.deck.setProps({layers:[this.layers_]})}onAdd(){}onRemove(){}onContextRestored({gl:e}){const n=this.getMap();this.deck=new deck.Deck({canvas:this.canvas,initialViewState:{longitude:l,latitude:c,pitch:t,zoom:p},gl:e,layers:this.layers_,props:this.props,controller:!1,userData:{map:n}});for(const s in u)u[s]=n.addListener(s,o=>this.handleMouseEvent(this.deck,s,o))}onDraw({gl:e,transformer:n}){const s=this.deck;if(!s||!s.layerManager)return;const o=n.getCameraParams(),b=this.canvas.clientWidth,w=this.canvas.clientHeight,E=0,P=0,M=Math.max(0,o.zoom-1),_=o.tilt,k=o.heading,C=o.center.lat,T=o.center.lng;this.canvas.style.left=`${E}px`,this.canvas.style.top=`${P}px`,s.setProps({width:b,height:w,viewState:{latitude:C,longitude:T,zoom:M,pitch:_,bearing:k,nearZMultiplier:.01,farZMultiplier:1.01,repeat:!0}}),e.disable(e.SCISSOR_TEST),e.disable(e.STENCIL_TEST),e.enable(e.DEPTH_TEST),e.disable(e.CULL_FACE),e.depthFunc(e.LEQUAL),e.depthMask(!0),this.requestRedraw(),s._drawLayers("google-map-repaint",{clearCanvas:!1})}onContextLost(){}getEventPixel(e,n){const s=n.getViewports()[0].project([e.latLng.lng(),e.latLng.lat()]);return{x:s[0],y:s[1]}}handleMouseEvent(e,n,s){const o={type:n,offsetCenter:this.getEventPixel(s,e),srcEvent:s};switch(n){case"click":e._lastPointerDownInfo=e.pickObject(o.offsetCenter),o.tapCount=1,e._onEvent(o);break;case"dblclick":o.type="click",o.tapCount=2,e._onEvent(o);break;case"mousemove":o.type="pointermove",e._onPointerMove(o);break;case"mouseout":o.type="pointerleave",e._onPointerMove(o);break;default:return}this.requestRedraw()}}const v=[new deck.GeoJsonLayer({id:"airports",data:f,filled:!0,pointRadiusMinPixels:2,opacity:1,pointRadiusScale:2e3,getRadius:i=>11-i.properties.scalerank,getFillColor:[200,0,80,180],pickable:!0,autoHighlight:!0,onHover:y}),new deck.ArcLayer({id:"arcs",data:f,dataTransform:i=>i.features.filter(e=>e.properties.scalerank<4),getSourcePosition:i=>[l,c],getTargetPosition:i=>i.geometry.coordinates,getSourceColor:[0,128,200],getTargetColor:[200,0,80],getWidth:1})],L={};m=new g(r,v,L),m.setMap(h)}window.initMap=S;
